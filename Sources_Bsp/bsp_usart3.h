#ifndef __BSP_USART_H__
#define __BSP_USART_H__

#include "bsp.h"

typedef struct _DEV_SERIALPORT_T  Dev_SerialPort_t;

extern Dev_SerialPort_t COM1;
extern Dev_SerialPort_t COM2;
extern Dev_SerialPort_t COM3;
extern Dev_SerialPort_t COM4;

struct _DEV_SERIALPORT_T{
    /*  配置参数  */
    const int8_t *      pcName;    
    uint32_t            unBaudRate;
    uint32_t            unWordLength;
    uint32_t            unStopBits;
    uint32_t            unParity;
    uint32_t            unHwFlowCtl;
    uint32_t            unMode;
    
    /*  硬件回调函数  */
    void (*pTransComplete)(void);
    void (*pRecvReady)(uint8_t * pucRecvBuff, uint16_t uiRecvLenth);
    void (*pErrHandle)(void);
    
    /*  上层句柄      */
    void *  pfUpperHandle;
    /*  底层句柄      */
    UART_HandleTypeDef *UartHandle; //句柄
};


//==================================================================================
//| 函数名称 | Bsp_UartOpen
//|----------|----------------------------------------------------------------------
//| 函数功能 | 配置并打开串口
//|----------|----------------------------------------------------------------------
//| 输入参数 | pstPort  串口配置结构体
//|----------|----------------------------------------------------------------------
//| 返回参数 | -1 打开失败, 0 打开成功
//|----------|----------------------------------------------------------------------
//| 函数设计 | wjb
//==================================================================================
int8_t Bsp_UartOpen(Dev_SerialPort_t* pstPort);


//==================================================================================
//| 函数名称 | Bsp_UartClose
//|----------|----------------------------------------------------------------------
//| 函数功能 | 关闭串口
//|----------|----------------------------------------------------------------------
//| 输入参数 | pstPort  串口配置结构体
//|----------|----------------------------------------------------------------------
//| 返回参数 | -1 打开失败, 0 打开成功
//|----------|----------------------------------------------------------------------
//| 函数设计 | wjb
//==================================================================================
int8_t Bsp_UartClose(Dev_SerialPort_t* pstPort);


//==================================================================================
//| 函数名称 | Bsp_UartTrans
//|----------|----------------------------------------------------------------------
//| 函数功能 | 串口发送(现在是阻塞的)
//|----------|----------------------------------------------------------------------
//| 输入参数 | pstPort  串口结构体 pucBuff 发送缓冲区 uiLenth 发送缓冲区长度
//|----------|----------------------------------------------------------------------
//| 返回参数 | -1 打开失败, 0 打开成功
//|----------|----------------------------------------------------------------------
//| 函数设计 | wjb
//==================================================================================
int8_t Bsp_UartTrans(Dev_SerialPort_t* pstPort, uint8_t* pucBuff, uint16_t uiLenth);


#endif
